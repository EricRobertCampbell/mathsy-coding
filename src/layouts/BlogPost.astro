---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, heroImage, updates } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<!-- Katex -->
		<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css" integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0" crossorigin="anonymous">
		<style>
			.title {
				font-size: 2em;
				margin: 0.25em 0 0;
			}
			hr {
				border-top: 1px solid #ddd;
				margin: 1rem 0;
			}
			.last-updated-on {
				font-style: italic;
				margin-top: 1rem;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				{heroImage && <img width={720} height={360} src={heroImage} alt="" />}
				<h1 class="title">{title}</h1>
				<FormattedDate date={pubDate} />
				{description && 
				<blockquote>
					{description}
				</blockquote>
				}
				{
				updates && updates.length > 0 ? (
						<div class="last-updated-on">
							Edits:
							<ul>
								{updates.map(update => <li><FormattedDate date={update.date} />: {update.message}</li>)}
							</ul>
						</div>
					) : null
				}
				<hr />
				<slot />
			</article>
		</main>
		<Footer />
	</body>
</html>
